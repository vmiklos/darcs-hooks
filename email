#!/usr/bin/env python

import os, gzip, smtplib
from xml.dom import minidom
from xml.sax import saxutils

class Hook:
	def __init__(self, dir, latestfile, callback):
		self.dir = dir
		self.latestfile = latestfile
		self.callback = callback

		try:
			os.stat(dir)
		except OSError:
			os.makedirs(dir)

		try:
			sock = open(os.path.join(self.dir, self.latestfile), "r")
		except IOError:
			sock = None

		if not sock:
			xmldoc = self.getxml("darcs chan --last 1 --xml-output")

			hash = xmldoc.getElementsByTagName('patch')[0].attributes['hash'].firstChild.toxml()
			self.puthash(hash)
		else:
			oldhash = sock.read().strip()
			sock.close()

			xmldoc = self.getxml('darcs chan --from-match "hash %s" --xml-output' % oldhash)

			counter = 0
			for i in xmldoc.getElementsByTagName('patch'):
				if counter >= len(xmldoc.getElementsByTagName('patch'))-1:
					break
				self.callback(i)
				counter += 1

			hash = xmldoc.getElementsByTagName('patch')[0].attributes['hash'].firstChild.toxml()
			self.puthash(hash)

	def getxml(self, cmd):
		sock = os.popen(cmd)
		xmldata = "".join(sock.readlines())
		sock.close()
		xmldoc = minidom.parseString(xmldata)
		return xmldoc

	def puthash(self, hash):
		sock = open(os.path.join(self.dir, self.latestfile), "w")
		sock.write("%s\n" % hash)
		sock.close()

class config:
	dir = os.path.join("_darcs", "third-party", "email")
	latestfile = "latest"
	dest = "vmiklos@frugalware.org"
	# just set this to None if you don't need this
	darcsweb_url = "http://darcs.frugalware.org/darcsweb/darcsweb.cgi"
	# if false, then the mail will be printed to stdout and no mail will be
	# sent
	send = False

def getpatch(hash):
	sock = gzip.GzipFile(os.path.join("_darcs", "patches", "%s") % hash)
	data = "".join(sock.readlines())
	sock.close()
	return data

def sendpatch(patch):
	global config
	msg = []
	repo = os.path.split(os.getcwd())[-1]
	patchname = patch.getElementsByTagName("name")[0].firstChild.toxml()
	hash = saxutils.unescape(patch.attributes['hash'].firstChild.toxml())

	fro = saxutils.unescape(patch.attributes['author'].firstChild.toxml())
	to = config.dest
	subject = "%s: %s" % (repo, patchname)
	msg.append("From: %s \nTo: %s\nSubject: %s\n" % (fro, to, subject))

	if config.darcsweb_url:
		msg.append("Darcsweb-Url: %s?r=%s;a=darcs_commitdiff;h=%s;\n" % (config.darcsweb_url, repo, hash))
	msg.append(getpatch(hash))

	if config.send:
		server = smtplib.SMTP('localhost')
		server.sendmail(fro, to, "\n".join(msg))
		server.quit()
	else:
		print "\n".join(msg)

if __name__ == "__main__":
	hook = Hook(config.dir, config.latestfile, sendpatch)
